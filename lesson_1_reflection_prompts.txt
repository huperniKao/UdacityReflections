How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    I was able to see the changes quicker to find the error

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    You can see the edits that have been done and how it's changed the program.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Pros- You build better habits about saving, and you can choose when you've reached a relevant save point.
    Cons- You might forget to save and lose some work.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    In case the files are related or linked together. Google docs are it's own document.

How can you use the commands git log and git diff to view the history of files?

    Git log can show you the history of the commits (along with comments if included)
    git diff can be used to compare two files (usually concurrent ones) to see the differences.

How might using version control make you more confident to make changes that
could break something?

    As long as you've made a commit, you can trust that you'll be able to go back to a previously working part of the code.

Now that you have your workspace set up, what do you want to try using Git for?

    I would like to revisit my school programs and get them uploaded into github, then get practice with Git
