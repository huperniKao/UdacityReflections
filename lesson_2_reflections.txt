What happens when you initialize a repository? Why do you need to do it?
    It initializes Git so you can keep a history and track changes.

How is the staging area different from the working directory and the repository? What value do you think it offers?
    The staging area allows you to plan and prepare how you want to commit certain changes, instead of having to save all at once.

How can you use the staging area to make sure you have one commit per logical change?
    You can check with Git diff and git diff --staged

What are some situations when branches would be helpful in keeping your history organized? How would branches help?
    They would be helpful if you wanted to test major changes, while keeping a working copy.

How do the diagrams help you visualize the branch structure?
    It helps see where commits might be in relation to other branches

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
    It combines the changes from the two branches based on their initial file(s). Representing it that ways helps show where commits came from.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?
    Pros - automatic saves you the hassle of looking through all the code and finding differences
    Cons - If it was always automatic it wouldn't know what code to keep.
